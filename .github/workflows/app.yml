name: App

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/ISSUE_TEMPLATE'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: ${{ !startsWith(github.event.head_commit.message || '', '[skip ci]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Print runner context
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Commit message: ${{ github.event.head_commit.message }}"
          echo "Actor: ${{ github.actor }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Repository: ${{ github.repository }}"

      - name: Write keystore
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        run: |
          echo "Writing keystore..."
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > key.jks

          touch signing.properties
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> signing.properties
          echo "KEYSTORE_ALIAS=${{ secrets.KEY_ALIAS }}" >> signing.properties
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> signing.properties
          echo "KEYSTORE_FILE=../key.jks" >> signing.properties

          # 双写一份，确保兼容 KEY_PASSWORD 与 KEYSTORE_ALIAS_PASSWORD 两种变量名
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> signing.properties
          echo "KEYSTORE_ALIAS_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> signing.properties

          echo "signing.properties content:"
          cat signing.properties

      # ⬇️ 新增：强制清理构建缓存和中间文件
      - name: Clean build files
        run: ./gradlew cleany

      - name: Write temporary key
        if: hashFiles('key.jks') == ''
        run: |
          echo "Generating temporary debug key..."
          keytool -genkeypair -v \
            -keystore key.jks \
            -storetype JKS \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -alias tempkey \
            -storepass temp1234 \
            -keypass temp1234 \
            -dname "CN=Temp, OU=Temp, O=Temp, L=Temp, ST=Temp, C=CN"

          echo "KEYSTORE_PASSWORD=temp1234" >> signing.properties
          echo "KEYSTORE_ALIAS=tempkey" >> signing.properties
          echo "KEY_ALIAS=tempkey" >> signing.properties
          echo "KEY_PASSWORD=temp1234" >> signing.properties
          echo "KEYSTORE_ALIAS_PASSWORD=temp1234" >> signing.properties
          echo "KEYSTORE_FILE=../key.jks" >> signing.properties

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-app-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            gradle-deps

      - name: Cache Gradle Build
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches/build-cache-*
          key: gradle-builds-app-${{ github.sha }}
          restore-keys: |
            gradle-builds

      - name: Build with Gradle
        id: buildWithGradle
        run: |
          echo 'org.gradle.caching=true' >> gradle.properties
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties

          chmod +x gradlew
          ./gradlew :manager:assembleRelease :manager:assembleDebug

          releaseName=$(ls manager/build/outputs/apk/release/*.apk | awk -F '/' '{print $NF}' | sed 's/.apk$//')
          debugName=$(ls manager/build/outputs/apk/debug/*.apk | awk -F '/' '{print $NF}' | sed 's/.apk$//')
          echo "releaseName=$releaseName" >> $GITHUB_OUTPUT
          echo "debugName=$debugName" >> $GITHUB_OUTPUT

      - name: Upload release
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.buildWithGradle.outputs.releaseName }}
          path: "manager/build/outputs/apk/release/*.apk"

      - name: Upload debug
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.buildWithGradle.outputs.debugName }}
          path: "manager/build/outputs/apk/debug/*.apk"

      - name: Upload mappings
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: mappings
          path: "manager/build/outputs/mapping/release"
